pacotes <- c("RSelenium", "tidyverse")
if (sum(as.numeric(!pacotes %in% installed.packages())) != 0) {
instalador <- pacotes[!pacotes %in% installed.packages()]
for (i in seq_along(instalador)) {
install.packages(instalador, dependencies = T)
break() }
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
openDriverFirefox <- function() {
rD <- rsDriver(browser = "firefox", port = 4545L, verbose = FALSE)
diver <- rD[["client"]]
diver$setWindowSize(1, 1)
Sys.sleep(5)
return(diver)
}
findCoords <- function(url) {
coords <- str_match(url, "@([-/.0-9]+,[-/.0-9]+)")[2]
return(if (is.na(coords)) "" else coords)
}
addressToCoords <- function(driver, address) {
url <- "https://www.google.com.br/maps"
driver$navigate(url)
coord <- ""
webElem <- NULL
while (is.null(webElem)) {
webElem <- driver$findElement(using = 'id', "searchboxinput")
randsleep <- sample(seq(0.5, 1, by = 0.001), 1)
Sys.sleep(randsleep)
}
webElem$sendKeysToElement(list(address, key = "enter"))
currentUrl <- driver$getCurrentUrl() %>% unlist()
currentCoord <- findCoords(currentUrl)
while (coord == currentCoord) {
currentUrl <- driver$getCurrentUrl() %>% unlist()
currentCoord <- findCoords(currentUrl)
randsleep <- sample(seq(0.5, 1, by = 0.001), 1)
Sys.sleep(randsleep)
}
return(currentCoord)
}
remDr <- openDriverFirefox()
endereco <- "Rua VENEZUELA, 1914 - CIdade Nova, Tereina PI"
print(endereco)
addressToCoords(remDr, endereco)
endereco <- "Rua Alvaro Mendes, 1237 - Centro, Tereina PI"
print(endereco)
addressToCoords(remDr, endereco)
endereco <- "Butantã, São Paulo - SP, 05508-010"
print(endereco)
addressToCoords(remDr, endereco)
load("df.estabelacimento.RData")
pacotes <- c("tidyverse", "kableExtra", "sjPlot", "pivottabler", "cabootcrs", "FactoMineR",
"plotly", "ggrepel", "magick", "webshot", "basictabler", "flextable", "rbokeh",
"factoextra", "gridExtra", "grid", "openxlsx")
if (sum(as.numeric(!pacotes %in% installed.packages())) != 0) {
instalador <- pacotes[!pacotes %in% installed.packages()]
for (i in seq_along(instalador)) {
install.packages(instalador, dependencies = T)
break() }
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
options(ggrepel.max.overlaps = Inf)
tabelaContigencia <- function(df, var01, var02) {
rows <- df[var01][, 1]
cols <- df[var02][, 1]
titulo <- paste0("Tabela de Contigencia ente as variáveis ", var01, " x ", var02)
tab <- sjt.xtab(title = titulo,
var.labels = c(var01, var02),
var.row = rows,
var.col = cols,
show.exp = TRUE,
show.row.prc = TRUE,
show.col.prc = TRUE)
return(tab)
}
testeQui2 <- function(df, variavel01, variavel02) {
rows <- df[variavel01][, 1]
cols <- df[variavel02][, 1]
table <- table(rows, cols)
qui2 <- chisq.test(table)
return(qui2)
}
tabela <- function(df, caption = NULL) {
tabelaPriv <- function(df, caption) df %>%
kable(caption = caption) %>%
kable_styling(bootstrap_options = "striped",
full_width = TRUE,
font_size = 12)
if (caption %>% is.null()) {
tabelaPriv(df, caption) %>%
save_kable(file = paste0("files/", caption, ".png"))
}
caption <- if (caption %>% is.null()) "Titulo" else caption
tabelaPriv(df, caption)
}
strTable <- function(df, caption = "") {
data.frame(variable = names(df),
classe = sapply(df, typeof),
first_values = sapply(df, function(x) paste0(head(x), collapse = ", ")),
row.names = NULL) %>%
tabela(caption = caption)
}
######################################################################################################################
## Carrega tabela de CNAE
######################################################################################################################
cnaes.empresa <- c(4751201, 4752100, 4753900, 4754701, 4755503, 4759899, 4763601, 4772500, 4781400, 4782201)
df.cnaes <- read.csv("cnae.txt", sep = ";")
df.cnaes %>% strTable("Dataframe CNAE")
df.cnaes %>%
filter(CODIGO %in% cnaes.empresa) %>%
tabela("CNAEs Empresa")
######################################################################################################################
## Carrega tabela com os estabelacimentos com a mesma cidade de Teresina e Timon
######################################################################################################################
df.estabelacimento.bruto <- read.csv("estabelecimentos.txt", sep = ";", dec = ",",
colClasses = c("CNPJ_BASICO" = "character", "CNPJ_ORDEM" = "character", "CNPJ_DV" = "character",
"IDENTIFICADOR_MF" = "integer", "NOME_FANTASIA" = "character", "SITUACAO" = "integer",
"DATA_SITUACAO" = "character", "MOTIVO_SITUACAO" = "integer", "CIDADE_EXT" = "character",
"PAIS" = "integer", "DATA_ATIVIDADE" = "character", "CNAE_PRINCIPAL" = "integer",
"CNAE_SECUNDARIO" = "character", "TIPO_LOG" = "character", "LOGRADOURO" = "character",
"NUMERO" = "character", "COMPLEMENTO" = "character", "BAIRRO" = "character",
"CEP" = "character", "UF" = "factor", "MUNICIPIO" = "integer",
"DDD1" = "character", "TELEFONE1" = "character", "DDD2" = "character",
"TELEFONE2" = "character", "DDD_FAX" = "character", "FAX" = "character",
"EMAIL" = "character", "SITUACAO_ESPECIAL" = "character", "DATA_SITUACAO_ESPECIAL" = "integer",
"RAZAO_SOCIAL" = "character", "NATUREZA" = "integer", "QUALICACAO_RESPONSAVEL" = "integer",
"CAPITAL" = "numeric", "PORTE" = "integer", "ENTE_FED_RESPONSAVEL" = "character"
))
df.estabelacimento <- df.estabelacimento.bruto %>%
filter(SITUACAO == 2 | (DATA_SITUACAO >= "20170101" & SITUACAO %in% c(3, 8))) %>%
transmute(
cnpj = paste0(CNPJ_BASICO, CNPJ_ORDEM, CNPJ_DV),
nome = NOME_FANTASIA,
tipo = if_else(.$IDENTIFICADOR_MF == 1, 'MATRIZ',
if_else(.$IDENTIFICADOR_MF == 2, 'FILIAL', NULL)),
situacao = if_else(.$SITUACAO == 1, "NULA",
if_else(.$SITUACAO == 2, "ATIVA",
if_else(.$SITUACAO == 3, "SUSPENSA",
if_else(.$SITUACAO == 4, "INAPTA",
if_else(.$SITUACAO == 8, "BAIXADA",
NULL))))),
dataSituacao = .$DATA_SITUACAO %>% as.Date(format = "%Y%m%d"),
dataAtividade = .$DATA_ATIVIDADE %>% as.Date(format = "%Y%m%d"),
cnaePrincipal = .$CNAE_PRINCIPAL,
cnaeSecundario = .$CNAE_SECUNDARIO %>% str_split(","),
endereco = paste0(.$TIPO_LOG, " ", .$LOGRADOURO, ", ", .$COMPLEMENTO, " ", .$NUMERO, " - ",
.$BAIRRO),
bairro = .$BAIRRO,
municipio = if_else(.$MUNICIPIO == 937, "TIMON",
if_else(.$MUNICIPIO == 1219, "TERESINA", NULL)),
uf = .$UF,
cep = CEP,
razaoSocial = RAZAO_SOCIAL,
capital = CAPITAL,
porte = if_else(.$PORTE == 0, "NÂO INFORMADO",
if_else(.$PORTE == 1, "MICRO EMPRESA",
if_else(.$PORTE == 3, "PEQUENO PORTE",
if_else(.$PORTE == 5, "DEMAIS", NULL))))
)
df.estabelacimento <- df.estabelacimento %>% add_column(
cnaes = mapply(list, .$cnaePrincipal, .$cnaeSecundario, SIMPLIFY = F) %>% map(unlist)
)
df.estabelacimento$cnae4751201 <- df.estabelacimento$cnaes %>%
map(~ifelse(4751201 %in% .x, 'S', 'N')) %>%
unlist()
df.estabelacimento$cnae4752100 <- df.estabelacimento$cnaes %>%
map(~ifelse(4752100 %in% .x, 'S', 'N')) %>%
unlist()
df.estabelacimento$cnae4753900 <- df.estabelacimento$cnaes %>%
map(~ifelse(4753900 %in% .x, 'S', 'N')) %>%
unlist()
df.estabelacimento$cnae4754701 <- df.estabelacimento$cnaes %>%
map(~ifelse(4754701 %in% .x, 'S', 'N')) %>%
unlist()
df.estabelacimento$cnae4755503 <- df.estabelacimento$cnaes %>%
map(~ifelse(4755503 %in% .x, 'S', 'N')) %>%
unlist()
df.estabelacimento$cnae4759899 <- df.estabelacimento$cnaes %>%
map(~ifelse(4759899 %in% .x, 'S', 'N')) %>%
unlist()
df.estabelacimento$cnae4763601 <- df.estabelacimento$cnaes %>%
map(~ifelse(4763601 %in% .x, 'S', 'N')) %>%
unlist()
df.estabelacimento$cnae4772500 <- df.estabelacimento$cnaes %>%
map(~ifelse(4772500 %in% .x, 'S', 'N')) %>%
unlist()
df.estabelacimento$cnae4781400 <- df.estabelacimento$cnaes %>%
map(~ifelse(4781400 %in% .x, 'S', 'N')) %>%
unlist()
df.estabelacimento$cnae4782201 <- df.estabelacimento$cnaes %>%
map(~ifelse(4782201 %in% .x, 'S', 'N')) %>%
unlist()
df.estabelacimento.acm <- df.estabelacimento %>% select(cnpj,
porte,
cnae4751201,
cnae4752100,
cnae4753900,
cnae4754701,
cnae4755503,
cnae4759899,
cnae4763601,
cnae4772500,
cnae4781400,
cnae4782201
)
df.estabelacimento.acm %>% strTable(caption = "Data frame estabelecimento")
df.estabelacimento %>%  saveRDS(file = "df.estabelacimento.RData")
df.estabelacimento %>%  saveRDS(file = "df.estabelacimento.rda")
df.estabelacimento <- readRDS("df.estabelacimento.rda")
df.enderecos <- df.estabelacimento$endereco %>% unique()
View(df.estabelacimento)
df.enderecos <- df.estabelacimento %>%
transmute(
endereco = paste(endereco, municipio, uf)
) %>%
unique()
View(df.enderecos)
df.enderecos <- df.estabelacimento %>%
transmute(
endereco = paste(endereco, municipio, uf),
coordenadas = character()
)
df.enderecos <- df.estabelacimento %>%
transmute(
endereco = paste(endereco, municipio, uf),
coordenadas = ""
)
View(df.enderecos)
df.enderecos %>% saveRDS("df.enderecos.rda")
df.enderecos <- readRDS("df.enderecos.rda")
100 % 2
100 %% 2
100 %% 3
100 %% 70
pacotes <- c("RSelenium", "tidyverse")
if (sum(as.numeric(!pacotes %in% installed.packages())) != 0) {
instalador <- pacotes[!pacotes %in% installed.packages()]
for (i in seq_along(instalador)) {
install.packages(instalador, dependencies = T)
break() }
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
openDriverFirefox <- function() {
rD <- rsDriver(browser = "firefox", port = 4545L, verbose = FALSE)
diver <- rD[["client"]]
diver$setWindowSize(1, 1)
Sys.sleep(5)
return(diver)
}
findCoords <- function(url) {
coords <- str_match(url, "@([-/.0-9]+,[-/.0-9]+)")[2]
return(if (is.na(coords)) "" else coords)
}
addressToCoords <- function(driver, address) {
url <- "https://www.google.com.br/maps"
driver$navigate(url)
coord <- ""
webElem <- NULL
while (is.null(webElem)) {
webElem <- driver$findElement(using = 'id', "searchboxinput")
randsleep <- sample(seq(0.5, 1, by = 0.001), 1)
Sys.sleep(randsleep)
}
webElem$sendKeysToElement(list(address, key = "enter"))
currentUrl <- driver$getCurrentUrl() %>% unlist()
currentCoord <- findCoords(currentUrl)
while (coord == currentCoord) {
currentUrl <- driver$getCurrentUrl() %>% unlist()
currentCoord <- findCoords(currentUrl)
randsleep <- sample(seq(0.5, 1, by = 0.001), 1)
Sys.sleep(randsleep)
}
return(currentCoord)
}
remDr <- openDriverFirefox()
endereco <- "Rua VENEZUELA, 1914 - CIdade Nova, Tereina PI"
print(endereco)
addressToCoords(remDr, endereco)
endereco <- "Rua Alvaro Mendes, 1237 - Centro, Tereina PI"
print(endereco)
addressToCoords(remDr, endereco)
endereco <- "Butantã, São Paulo - SP, 05508-010"
print(endereco)
addressToCoords(remDr, endereco)
df.enderecos <- readRDS("df.enderecos.rda")
count <- 0
by(df.enderecos, seq_len(nrow(df.enderecos)),
function(row) {
if(df.enderecos[row, ]$endereco == ""){
df.enderecos[row, ]$coordenadas = addressToCoords(remDr, df.enderecos[row, ]$endereco)
count <- count + 1
if((count %% 100) == 0){
df.enderecos %>% saveRDS("df.enderecos.rda")
}
print(count)
}
})
remDr <- openDriverFirefox()
df.enderecos <- readRDS("df.enderecos.rda")
count <- 0
by(df.enderecos, seq_len(nrow(df.enderecos)),
function(row) {
if(df.enderecos[row, ]$endereco == ""){
df.enderecos[row, ]$coordenadas = addressToCoords(remDr, df.enderecos[row, ]$endereco)
count <- count + 1
if((count %% 100) == 0){
df.enderecos %>% saveRDS("df.enderecos.rda")
}
print(count)
}
})
by(df.enderecos, seq_len(nrow(df.enderecos)),
function(row) {
if(df.enderecos[row, 1] == ""){
df.enderecos[row, 2] = addressToCoords(remDr, df.enderecos[row, 1])
count <- count + 1
if((count %% 100) == 0){
df.enderecos %>% saveRDS("df.enderecos.rda")
}
print(count)
}
})
remDr <- openDriverFirefox()
df.enderecos <- readRDS("df.enderecos.rda")
count <- 0
for (row in seq_len(nrow(df.enderecos))) {
if(df.enderecos[row, 1] == ""){
df.enderecos[row, 2] = addressToCoords(remDr, df.enderecos[row, 1])
count <- count + 1
if((count %% 100) == 0){
df.enderecos %>% saveRDS("df.enderecos.rda")
}
print(count)
}
}
pacotes <- c("RSelenium", "tidyverse")
if (sum(as.numeric(!pacotes %in% installed.packages())) != 0) {
instalador <- pacotes[!pacotes %in% installed.packages()]
for (i in seq_along(instalador)) {
install.packages(instalador, dependencies = T)
break() }
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
openDriverFirefox <- function() {
rD <- rsDriver(browser = "firefox", port = 4545L, verbose = FALSE)
diver <- rD[["client"]]
diver$setWindowSize(1, 1)
Sys.sleep(5)
return(diver)
}
findCoords <- function(url) {
coords <- str_match(url, "@([-/.0-9]+,[-/.0-9]+)")[2]
return(if (is.na(coords)) "" else coords)
}
addressToCoords <- function(driver, address) {
url <- "https://www.google.com.br/maps"
driver$navigate(url)
coord <- ""
webElem <- NULL
while (is.null(webElem)) {
webElem <- driver$findElement(using = 'id', "searchboxinput")
randsleep <- sample(seq(0.5, 1, by = 0.001), 1)
Sys.sleep(randsleep)
}
webElem$sendKeysToElement(list(address, key = "enter"))
currentUrl <- driver$getCurrentUrl() %>% unlist()
currentCoord <- findCoords(currentUrl)
while (coord == currentCoord) {
currentUrl <- driver$getCurrentUrl() %>% unlist()
currentCoord <- findCoords(currentUrl)
randsleep <- sample(seq(0.5, 1, by = 0.001), 1)
Sys.sleep(randsleep)
}
return(currentCoord)
}
#remDr <- openDriverFirefox()
#endereco <- "Rua VENEZUELA, 1914 - CIdade Nova, Tereina PI"
#print(endereco)
#addressToCoords(remDr, endereco)
#endereco <- "Rua Alvaro Mendes, 1237 - Centro, Tereina PI"
#print(endereco)
#addressToCoords(remDr, endereco)
#endereco <- "Butantã, São Paulo - SP, 05508-010"
#print(endereco)
#addressToCoords(remDr, endereco)
######################################################################################################################
## tablaha os enderecos dos estabelacimentos
######################################################################################################################
#df.estabelacimento <- readRDS("df.estabelacimento.rda")
#df.enderecos <- df.estabelacimento %>%
#  transmute(
#    endereco = paste(endereco, municipio, uf),
#    coordenadas = ""
#  )
#df.enderecos %>% saveRDS("df.enderecos.rda")
######################################################################################################################
## carrega os enderecos
######################################################################################################################
df.enderecos <- readRDS("df.enderecos.rda")
df.enderecos %>% filter(coordenadas != "") %>% count()
count <- 0
for (row in seq_len(nrow(df.enderecos))) {
if (df.enderecos[row, 2] == "") {
driver <- openDriverFirefox()
df.enderecos[row, 2] <- tryCatch({ addressToCoords(driver, df.enderecos[row, 1]) }, error = function(cond) {
print(cond)
driver$close()
df.enderecos %>% saveRDS("df.enderecos.rda")
return("")
})
count <- count + 1
if ((count %% 10) == 0) {
df.enderecos %>% saveRDS("df.enderecos.rda")
}
print(count)
}
}
df.enderecos <- readRDS("df.enderecos.rda")
df.enderecos %>% filter(coordenadas != "") %>% count()
pacotes <- c("RSelenium", "tidyverse")
if (sum(as.numeric(!pacotes %in% installed.packages())) != 0) {
instalador <- pacotes[!pacotes %in% installed.packages()]
for (i in seq_along(instalador)) {
install.packages(instalador, dependencies = T)
break() }
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
openDriverFirefox <- function() {
rD <- rsDriver(browser = "firefox", port = 4545L, verbose = FALSE)
diver <- rD[["client"]]
diver$setWindowSize(1, 1)
Sys.sleep(5)
return(c(diver, rD))
}
findCoords <- function(url) {
coords <- str_match(url, "@([-/.0-9]+,[-/.0-9]+)")[2]
return(if (is.na(coords)) "" else coords)
}
addressToCoords <- function(driver, address) {
url <- "https://www.google.com.br/maps"
driver$navigate(url)
coord <- ""
webElem <- NULL
while (is.null(webElem)) {
webElem <- driver$findElement(using = 'id', "searchboxinput")
randsleep <- sample(seq(0.5, 1, by = 0.001), 1)
Sys.sleep(randsleep)
}
webElem$sendKeysToElement(list(address, key = "enter"))
currentUrl <- driver$getCurrentUrl() %>% unlist()
currentCoord <- findCoords(currentUrl)
while (coord == currentCoord) {
currentUrl <- driver$getCurrentUrl() %>% unlist()
currentCoord <- findCoords(currentUrl)
randsleep <- sample(seq(0.5, 1, by = 0.001), 1)
Sys.sleep(randsleep)
}
return(currentCoord)
}
#remDr <- openDriverFirefox()
#endereco <- "Rua VENEZUELA, 1914 - CIdade Nova, Tereina PI"
#print(endereco)
#addressToCoords(remDr, endereco)
#endereco <- "Rua Alvaro Mendes, 1237 - Centro, Tereina PI"
#print(endereco)
#addressToCoords(remDr, endereco)
#endereco <- "Butantã, São Paulo - SP, 05508-010"
#print(endereco)
#addressToCoords(remDr, endereco)
######################################################################################################################
## tablaha os enderecos dos estabelacimentos
######################################################################################################################
#df.estabelacimento <- readRDS("df.estabelacimento.rda")
#df.enderecos <- df.estabelacimento %>%
#  transmute(
#    endereco = paste(endereco, municipio, uf),
#    coordenadas = ""
#  )
#df.enderecos %>% saveRDS("df.enderecos.rda")
######################################################################################################################
## carrega os enderecos
######################################################################################################################
df.enderecos <- readRDS("df.enderecos.rda")
df.enderecos %>% filter(coordenadas != "") %>% count()
count <- 0
for (row in seq_len(nrow(df.enderecos))) {
if (df.enderecos[row, 2] == "") {
driver <- openDriverFirefox()
df.enderecos[row, 2] <- tryCatch({ addressToCoords(driver[1], df.enderecos[row, 1]) }, error = function(cond) {
print(cond)
driver[1]$close()
driver[2][["server"]]$stop()
df.enderecos %>% saveRDS("df.enderecos.rda")
return("")
})
count <- count + 1
if ((count %% 10) == 0) {
df.enderecos %>% saveRDS("df.enderecos.rda")
}
print(count)
}
}
